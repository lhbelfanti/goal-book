Word	Count
!=	2
!c.clientGone	1
"")	2
"-"	1
"Id",	2
"net/url"	2
"pos:	1
$GOBIN,	1
$GOPATH,	1
$GOPATH.	1
$GOPATH/bin	1
$GOPATH/src/golang.org/x/tools/cmd/oracle/oracle.el	1
$GOPATH[0]/bin,	1
$GOROOT	1
$GOROOT/bin.	1
$GOROOT/go/src/fmt/print.go:409:	1
$GOROOT/go/src/io/io.go:25:	1
$GOROOT/src//cmd/trace.go:118:	1
$GOROOT/src/cmd/trace.go:118:	1
$GOROOT/src/net/dnsmsg.go:92:	1
$GOROOT/src/net/http/request.go:	1
$GOROOT/src/net/http/server.go:1316:	1
$GOROOT/src/net/http/server.go:189:	1
$GOROOT/src/net/http/server.go:1970:	1
$GOROOT/src/net/http/server.go:2084:	2
$GOROOT/src/pkg/net/dnsmsg.go:92:	1
$GOROOT/src/strings/search.go:79:	1
%	4
&	1
&&	3
&body{src:	3
&expectContinueReader{readCloser:	1
&stringFinder{	1
&struct	1
&timeoutWriter{w:	1
'b':	1
'c':	1
'd':	1
'implements'	1
(*Error)	1
(*URL)	3
(*URL,	1
(*bufio.Reader).UnreadRune	1
(*bytes.Buffer).UnreadRune	1
(*bytes.Reader).UnreadRune	1
(*encoding/json.encodeState).UnreadRune	1
(*fmt.ss).UnreadRune	1
(*net/http.ServeMux).ServeHTTP	1
(*net/http.Server).Serve	1
(*net/http.conn).serve	1
(*strings.Reader).UnreadRune	1
(EscapeError)	1
(It	1
(RuneScanner).UnreadRune()	1
(The	1
(an	1
(at	1
(bufio.ReadWriter).UnreadRune	1
(by	1
(c	1
(complit	1
(described	1
(dns	2
(e.g.	1
(f	1
(fmt.ScanState).UnreadRune	1
(fmt.runeUnreader).UnreadRune	1
(for	1
(h	3
(io.ReadCloser),	1
(last-i)	1
(m	1
(math/big.byteReader).UnreadRune	1
(missing	1
(more	1
(msg	1
(net/http.HandlerFunc).ServeHTTP	2
(net/http.serverHandler).ServeHTTP	1
(or	1
(p	1
(scope),	1
(string,	1
(such	1
(tests).	2
(url	2
(var,	1
*Request)	2
*URL,	2
*bufio.Reader	1
*bytes.Buffer	1
*bytes.Reader	1
*conn)	1
*dnsHeader)	2
*dnsMsg)	2
*encoding/json.encodeState	1
*fmt.ss	1
*http.Request)	2
*net/http.body,	1
*net/http.expectContinueReader,	1
*pp	1
*pp)	1
*stringFinder	1
*strings.Reader	1
*strings.Reader;	1
*struct{*strings.Reader;	1
*timeoutHandler)	1
*uint16	2
+	1
-	2
-format	1
-format=json	2
-format=plain	1
-format=plain.	1
-format=xml	1
-help	2
-pos	1
-pos=$GOROOT/src/fmt/print.go:#3903	1
-pos=$GOROOT/src/pkg/path/match.go:#3238,#3242	1
-pos=...,	1
...	6
...]	1
.Id	1
//	17
/x/tools/oracle/serial/serial.go	2
0;	2
1	2
1)	3
10,	1
2,	1
:=	8
<	2
<-	5
<-cc	1
<-done:	1
<args>	1
<mode>	1
=	10
==	2
A	2
Acme.	1
After	1
Almost	1
Analysis	1
And:	1
Atom,	1
Before	1
Bigger	1
Bindings	1
Body	3
Building	2
C-c	1
C-o	1
Command	2
Contents	1
Don’t	1
Each	1
Eclipse.	1
Editor	2
Emacs	6
Emacs,	1
Error	1
Error()	2
EscapeError	1
Essentially	1
Even	1
Example:	13
F	2
F5	1
F5.	1
F6	1
For	3
Found	1
Free	1
Go	5
HTTP	1
HandlerFunc)	1
Here’s	1
How	2
I	4
If	2
In	8
IsAbs()	1
It	2
It’s	1
JSON	1
L,	2
L1	7
L2	4
L3	2
M-x	3
Notation	2
Offsets	1
Oracle	1
P	2
Pack	1
Pack()	1
Parse	1
Parse(ref	1
ParseQuery	1
ParseRequestURI	1
Please	1
Pointer	2
Queries	3
Query()	1
QueryEscape	1
QueryUnescape	1
Questions	1
Read	1
Reflection	1
Request	1
ResponseWriter,	2
Run	1
RuneReader	1
RuneScanner	2
Scope	1
Second	1
See	1
ServeHTTP	1
ServeHTTP(w	2
Since	1
Specifying	1
Sublime	1
Supported	1
Table	1
Text,	1
The	39
There	1
These	1
This	17
To	3
Troubleshooting	2
Typically,	1
URL	1
Unpack	1
Unpack(msg	1
UnreadRune()	1
Usage:	1
Use	1
Values	1
Values,	1
Vim,	1
Walk(f	2
We	1
What	9
What’s	1
Where	3
Which	3
Within	1
XML	1
[<flag>	1
[]byte)	1
[]byte,	1
[]int	1
[start,	1
a	75
about	5
above	3
abstract	1
access	1
across	1
actual	1
add	1
added	1
again	1
alignment,	1
all	12
allocated	3
almost	1
also	7
although	2
an	12
analyse	1
analysis	14
analysis,	6
analysis.	2
analytical	2
and	35
another	1
answer	3
answered	1
answers	2
any	5
appear	2
appearing	1
application	2
application,	1
applied	1
approximations	1
arbitrary	1
are	21
argument	1
arguments	1
arise	2
as	17
as:	1
at	4
author	1
available.	1
avoid	1
basic	1
be	16
be.	1
be:	2
because	1
been	2
behaviour	1
behaviour.	1
belonging	1
below),	1
below,	1
below.	1
better	1
between	1
bindings,	1
block	2
blue.	1
body	1
bool	6
bool)	4
bool,	4
both	1
bound	1
brevity,	1
broken	1
bufio.ReadWriter	1
bug.	1
bugs,	1
build	2
but	10
button,	1
by	24
byte	2
c.clientGone	1
c.closeNotifyc	4
c.mu.Lock()	1
c.mu.Unlock()	1
call	21
call?	1
called	4
callees	6
callees,	1
callers	8
callers,	1
callgraph	1
calls,	3
calls.	1
callstack	7
can	5
can.	2
cannot	1
cannot.	1
can’t	1
capable	2
capturing	1
case	5
case,	1
cases,	2
cause	2
chan	3
change	1
channel	6
channel,	1
channels.	1
chosen	1
class	2
clear.	1
client	1
closing:	3
closure	1
cmd/trace	1
cmd/trace.	1
cmd/trace.httpBlock	1
cmd/trace.httpGoroutine	1
cmd/trace.httpGoroutines	1
cmd/trace.httpIO	1
cmd/trace.httpJsonTrace	1
cmd/trace.httpMain	4
cmd/trace.httpSched	1
cmd/trace.httpSyscall	1
cmd/trace.httpTrace	1
cmd/trace.httpTraceViewerHTML	1
cmd/trace.main	1
cmd/trace:	1
code	8
code,	3
code?	1
colored	1
come	1
command	8
command:	1
commands	1
comments	1
commonly	2
compiler	2
compiler)	1
complete	3
complex	1
complit	5
composite	1
compute	1
concrete	5
configuration,	1
configuration.	1
connect	1
conservative	1
considerably,	1
considered	1
considering	1
consist	1
constant	2
constants	1
constants).	1
construct	1
contact	1
contain	2
contain,	1
containing	3
contains	3
controls	1
convenience.	1
conversions	1
correct,	1
correspondence	1
corresponding	2
corresponds	1
could	1
course	1
course.	1
coverage	1
created	1
current	2
currently	1
cursor	4
data	5
day	1
dead	1
declaration	3
deduce.	1
defer	1
defined	6
definition	4
definition,	1
definition.	1
degree	1
denoted	1
denotes	1
depend,	1
depends	1
describe	9
describe,	1
describe.	1
described	2
described,	1
describes	2
description	2
design	1
desired	1
detail	1
details.	1
determines	1
dh	5
dh.	1
dh.Id	2
diagnostic	1
diagnostics	1
different	4
differs	1
diminished.	1
directly	1
directory.	1
discover	1
dispatcher	1
dispatches	2
displaying	1
distinct	2
distracting	1
dnsHeader	4
document	1
document.	1
documentation	1
does	3
done	4
don’t	1
down	1
due	1
during	2
dynamic	11
e.g.	1
e.g.,	1
each	6
ease	1
edges	1
editor	2
editor,	1
editor-friendly	1
editors	1
effect	1
effects	3
effort---human	1
elements	1
encoding/asn1.forkableWriter	1
end)	1
entire	1
entity	1
enumerates	1
eofReader	3
err	3
error	2
error)	5
error,	1
errors	2
especially	1
essentially	1
etc	1
even	1
every	1
exact.	1
example	3
example.	1
example:	1
examples	2
examples,	2
excerpt	2
executable	2
execution.	1
exist	1
expected	1
explains	1
exported	2
expression	3
expression,	3
expression;	1
expression?	2
external	1
f	2
f(&h.Id,	2
f(w,	1
f.goodSuffixSkip	1
f.goodSuffixSkip[last-lenSuffix]	1
fact	1
false	1
field	3
field),	1
field,	1
field/local/global/map/array/etc?	1
file	4
file,	1
file.	1
file:#offset,	1
find	2
first	1
fixed	1
flag	4
fmt	2
fmt,	1
fmt.ScanState	1
fmt.runeUnreader	1
fmtUint64(v	1
following	1
for	22
forget	1
form	2
format	3
format.	1
format:	1
formats	1
forms	1
free	9
freevars	4
freevars.	1
from	22
from,	2
front.	1
fully	1
func	17
func()	1
func(query	1
func(rawurl	2
func(s	2
func(v	2
function	24
function.	1
function;	1
function?	1
functions	1
functions,	2
general,	1
generally	1
get	1
given	2
global	1
go	5
go-oracle-callees	1
go-oracle-set-scope	2
go-oracle-xxx	1
go/src/fmt/print.go:128:38:	1
go/src/fmt/print.go:141:7:	1
goSyntax	1
golang.org/x/tools/cmd/oracle	1
graph	2
graph;	1
greater	1
grey	2
grey,	1
h.handler.ServeHTTP(tw,	1
half-open	1
handler	1
handlers	1
have	4
hdr:	1
help	1
helps	2
here	12
highlighted	1
hit	1
how	2
http.ResponseWriter,	2
httpMain	4
httpMain(w	2
human-readable	1
hyperlinks	1
i	6
i++	2
identifier	5
identifier,	3
identifier.	1
identifier?	2
identifiers	1
identifiers:	1
if	12
immediately.	1
implement	2
implemented	18
implements	10
implements,	1
import	4
imported	1
imprecision	1
improve	1
in	38
include:	1
includes	2
including	1
indicate	1
indicates	2
indices.	1
indirectly	2
infeasible,	1
information	5
inputs	2
inputs.	1
instead,	1
int	2
integration	2
interest	1
interest:	1
interface	5
interface)	1
interface,	1
interface?	1
interfaces	3
interface{},	2
interval	1
into	3
invocation:	1
invocations	1
invoke	1
invoked	4
io	1
io.Closer	1
io.Closer},	1
io.LimitReader(r,	1
io.ReadCloser	4
io.RuneReader	2
is	55
is,	1
isn’t	1
isolated	1
it	23
it,	2
it.	4
its	11
it’s	4
json	1
json,	2
just	2
key	1
keys	1
kind	2
kind,	1
kinds	1
know	4
label	2
large	1
larger	1
last	3
last;	2
ldigits)	2
leading	1
len(pattern)	1
len(suffix).	1
lenSuffix	3
level,	1
libraries	2
libraries.	2
library	1
like	4
line	3
line,	1
line.	1
links	1
list	1
list.	1
literal.	1
load	3
load-file	1
local	1
local,	1
location	5
locations	1
longer	1
longestCommonSuffix(pattern,	1
looking	2
looks	2
loop	1
loosely	1
main	5
make	4
make(chan	3
makeStringFinder(pattern	1
many	3
maps,	1
markers	1
may	24
meaning	1
members	3
members,	1
method	24
method,	1
methods,	2
methods?	1
might	4
mode	3
model	3
modes.	1
modular	1
moment	1
more	5
most	2
mostly	1
msg,	1
multiple	1
must	7
name,	2
name.	1
named	3
names	3
necessary	1
need	3
negatives”	1
net,	1
net.	1
net/http	5
net/http.NotFound	1
net/http.Serve	1
net/http.TestCloseNotifier	1
net/http:	1
net/http’s	1
never	2
new	1
newChunkedReader(r),	1
nil	3
node	1
non-exported	1
not	12
not.	2
noteClientGone()	1
null	1
numerous,	1
object	3
objects	3
objects:	2
obtained	1
occurring	1
of	112
offset	1
ok	1
on	10
on,	1
on.	1
one?	1
only	4
op	1
operand	1
operation	2
operation;	1
or	17
oracle	22
oracle,	1
oracle.	1
oracle.el	1
oracle:	1
orfile:#start,#end,	1
other	2
our	1
output	10
output,	2
output.	1
outputs	1
own	1
own,	1
p),	1
p.fmt.integer(int64(v),	2
p.fmtC(int64(v))	1
package	18
package,	1
package.	7
package.)	1
package?	1
packages	3
packages.	1
packages;	1
page.	2
pairs	1
parameter	1
parameters	2
parsing.	1
parts	2
pass:	1
passed	1
path	6
paths,	1
pattern	1
pattern's	1
pattern[1:i+1])	1
pattern[i-lenSuffix]	1
pattern[last-lenSuffix]	1
peers	6
perform.	1
perform:	1
persists	1
piece	1
plain	2
plain,	1
plan	1
point	9
point,	1
point.	2
pointer	25
pointer-to-named	1
pointers,	1
points-to	1
pointsto	6
pos	1
position	3
positives”	1
possible	9
preceded	1
precise	2
precision	1
present.	1
pressing	1
print	1
prints	2
program	3
program,	2
program.	3
programming.	1
programs	1
programs,	1
programs.	1
properties	2
provides	1
queries	3
queries,	1
queries.	1
query	31
query.	2
questions	4
r	4
r)	2
r,	2
r:	1
reachable	2
reachable,	1
reached	1
real	1
realLength),	1
reasoning	1
receive	2
received	2
received?	1
receives;	1
receiving	1
refactor	1
refer	1
reference	3
referenced	4
references	3
referrers	4
referrers,	1
refers	1
refs	1
region	1
registered	1
relation	3
relationship	1
relevant	1
rendered	1
repeats	1
report	1
reports	4
req.Body	5
req.Body,	1
requests	1
required	1
requires	3
requiring	1
resembling	1
resp:	1
response	2
result	2
results	3
results,	1
results.	1
return	3
reveals	2
robot---to	1
root	3
routinely	1
run	1
rune,	1
running	1
s.x.y)	1
same	7
satisfy?	1
saw	1
says	4
scanning	1
scope	11
scope,	1
scope.	6
scopes	1
second	1
section	2
select	1
select)	1
selected	16
selecting	2
selection	9
selection,	3
selection.	3
send	1
send/receive	1
sends	1
sends/receives	1
sent	3
separate	1
server	1
server,	1
serves	2
set	11
set,	1
sets);	1
several	1
shift,	1
should	1
show	10
shown	2
shown,	1
shows	8
similar	1
simple	1
simplest	1
since	1
single	2
site.	1
sites:	1
size,	1
slices,	1
slightly	1
slower.	1
small	1
so	8
some	2
something	1
sound	1
source	9
source/results	1
spaces	1
speaking,	1
specified	2
specified,	1
specify	3
stack	1
starting	3
startup	1
statements	1
static	4
string	6
string)	9
strings	1
struct	6
structured	5
struct{...}	2
such	5
suffix	1
summary	1
supported	1
supported,	2
switch	1
symbol.	1
syntactic	1
syntax	9
syntax.	4
syntax:	2
t.Body	3
t.Close}	3
tag	2
targets	2
technical	1
tell	2
term	1
test	1
test.	1
tests)	1
tests.	3
text	1
text",	1
textbook	1
that	25
the	196
their	3
there	2
there.	1
these	5
they	5
this	30
this:	2
those	2
three	1
time	2
to	55
to,	2
to.	1
to.)	2
to:	4
to?	1
token.	1
too	1
too.	1
tool	7
transitive	1
treat	1
tree	1
tree,	1
trivial	1
true	5
try	1
tw	1
two	1
type	26
type,	1
type:	1
types	7
types,	4
types.	1
types:	1
typical	2
u	1
uint64	1
uint64,	1
unary	1
underestimates	1
understand	2
unknown.	1
unsafe.Pointer	1
unsigned,	2
unsound	1
unsoundness	1
until	1
unused	1
up	1
update	1
upon	1
upon,	1
url.URL	1
use	5
used	1
useful	4
useful,	1
usefulness	2
user-selected	1
users	1
uses	8
using	5
utf8,	1
v	2
value	4
value.	1
value?	1
values	1
var	13
variable,	1
variable.	1
variables	7
variables,	1
variables:	1
variables”	1
varies	1
various	1
verb	2
visit	1
w.Write(templMain)	2
want	1
was	3
we	1
web	1
webserver	1
what	3
when	5
where	5
whether	1
which	9
whicherrs	1
whose	1
will	7
window	1
wish	1
with	6
within	7
work	1
works	1
would	2
writing)	1
w}	2
xml	1
xml,	1
xxx	1
yellow,	1
you	11
your	10
you’d	1
you’re	1
zero-based.	1
{	23
}	10
}()	1
}{	1
~/.emacs	1
‘main’	1
“Free	1
“dh.Id”	1
“false	2
…	4
▶	95
